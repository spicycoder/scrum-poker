{
    "pipes": [],
    "interfaces": [
        {
            "name": "CardDetails",
            "id": "interface-CardDetails-ba8559bbcd4f47af811b68fe57e9427c5801909211dc63ce13db80879f1b75012a9b7ac9edaccf08e6780b1c53f2a3c0e4a4971c334f9c3c17d98325ee63a0c8",
            "file": "src/app/models/CardDetails.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export default interface CardDetails {\r\n  display: string | null;\r\n  selected: boolean;\r\n  value: string | null;\r\n}\r\n",
            "properties": [
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-bcc66d62eb67ced14a69cb01bd5853ddbc2083841612ea07dfd77cb758a5f882590036cc73486fe19d03e2a674ea754ee1faa3cfee3af2a4c4a4c9107c1b548d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'scrum-poker'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "PokerCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { PokerCardComponent } from './components/poker-card/poker-card.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, PokerCardComponent],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'scrum-poker';\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-poker-card display=\"John Doe\"></app-poker-card>\r\n"
        },
        {
            "name": "PlayersComponent",
            "id": "component-PlayersComponent-3093efca5fdbeb4901a4b581f0887c1f1a1c5887b50b816fdc3b556d95d77f787358364f94f83debc7da0a970cab03b3d4ea0fd159ff6e4d46737f032363108f",
            "file": "src/app/components/players/players.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-players",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./players.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "players",
                    "defaultValue": "input.required<CardDetails[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "show",
                    "defaultValue": "computed(() => this.players().every(player => player.value !== null))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PokerCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input, Input } from '@angular/core';\r\nimport CardDetails from '../../models/CardDetails';\r\nimport { PokerCardComponent } from \"../poker-card/poker-card.component\";\r\n\r\n@Component({\r\n  selector: 'app-players',\r\n  standalone: true,\r\n  imports: [PokerCardComponent],\r\n  templateUrl: './players.component.html',\r\n  styleUrl: './players.component.css'\r\n})\r\nexport class PlayersComponent {\r\n  players = input.required<CardDetails[]>();\r\n  show = computed(() => this.players().every(player => player.value !== null));\r\n}\r\n",
            "styleUrl": "./players.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"m-4 flex flex-wrap justify-center\">\r\n  @for (player of players(); track player.display) {\r\n    <app-poker-card [card]=\"player\" [show]=\"show()\"></app-poker-card>\r\n  }\r\n</div>\r\n"
        },
        {
            "name": "PointsComponent",
            "id": "component-PointsComponent-9ab99f3c8c1805e169394667d1ed556627445937c6a5eecc9b1e93b1086a2051c461ef12c63dd9a8143fdefb3d835eeb23379f439421f77c65a7f748bd878759",
            "file": "src/app/components/points/points.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-points",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./points.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "points",
                    "defaultValue": "input.required<CardDetails[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "show",
                    "defaultValue": "computed(() => this.transformedPoints().every(point => point.value !== null))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "transformedPoints",
                    "defaultValue": "computed<CardDetails[]>(() =>\r\n    this.points().map(point => ({\r\n      ...point,\r\n      display: point.value,\r\n      value: point.value ? this.points().filter(p => p.value === point.value).length.toString() : null\r\n    }))\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PokerCardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, computed, input } from '@angular/core';\r\nimport CardDetails from '../../models/CardDetails';\r\nimport { PokerCardComponent } from '../poker-card/poker-card.component';\r\n\r\n@Component({\r\n  selector: 'app-points',\r\n  standalone: true,\r\n  imports: [PokerCardComponent],\r\n  templateUrl: './points.component.html',\r\n  styleUrl: './points.component.css'\r\n})\r\nexport class PointsComponent {\r\n  points = input.required<CardDetails[]>();\r\n\r\n  transformedPoints = computed<CardDetails[]>(() =>\r\n    this.points().map(point => ({\r\n      ...point,\r\n      display: point.value,\r\n      value: point.value ? this.points().filter(p => p.value === point.value).length.toString() : null\r\n    }))\r\n  );\r\n\r\n  show = computed(() => this.transformedPoints().every(point => point.value !== null));\r\n}\r\n",
            "styleUrl": "./points.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"m-4 flex flex-wrap justify-center\">\r\n  @for (point of transformedPoints(); track point.display) {\r\n    <app-poker-card [card]=\"point\" [show]=\"show()\"></app-poker-card>\r\n  }\r\n</div>\r\n"
        },
        {
            "name": "PokerCardComponent",
            "id": "component-PokerCardComponent-6357b6c989c548fb25f927e3702148e732550c376c108bd5c2c4b765428e26e697f34153b67f63156170de70e2b891787969ec31713855d1929ea53eb58802b9",
            "file": "src/app/components/poker-card/poker-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-poker-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./poker-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "required": true
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "required": true
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\r\nimport { Component, input, Input } from '@angular/core';\r\nimport CardDetails from '../../models/CardDetails';\r\n\r\n@Component({\r\n  selector: 'app-poker-card',\r\n  standalone: true,\r\n  imports: [NgClass],\r\n  templateUrl: './poker-card.component.html',\r\n  styleUrl: './poker-card.component.css'\r\n})\r\nexport class PokerCardComponent {\r\n  card = input.required<CardDetails>();\r\n  show = input<boolean>(true);\r\n}\r\n",
            "styleUrl": "./poker-card.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex items-center justify-center w-24 h-36 rounded-2xl m-2 indicator p-2 text-center\" [ngClass]=\"{'cursor-pointer hover:bg-cyan-900 bg-cyan-700 text-cyan-100': !card().selected, 'bg-sky-700 text-sky-100': card().selected}\">\r\n  @if (card().value) {\r\n    <span class=\"indicator-item badge badge-primary text-primary-content\">{{show() ? card().value : '🔒'}}</span>\r\n  }\r\n  <div class=\"text-xs\">{{card().display}}</div>\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/players/players.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PlayersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/points/points.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PointsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/poker-card/poker-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PokerCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/models/CardDetails.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CardDetails",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}